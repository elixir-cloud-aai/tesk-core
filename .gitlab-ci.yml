# This file is a template, and might need editing before it works on your project.
# Official docker image.
image: docker:latest

services:
  - docker:dind

build-master-taskmaster:
  stage: build
  script:
    - setup_docker
    - registry_login
    - docker build --pull -f containers/taskmaster.Dockerfile -t "$CI_REGISTRY_IMAGE/taskmaster" .
    - docker push "$CI_REGISTRY_IMAGE/taskmaster"
  only:
    - develop-pmnet


build-taskmaster:
  stage: build
  script:
    - setup_docker
    - registry_login
    - docker build --pull -f containers/taskmaster.Dockerfile -t "$CI_REGISTRY_IMAGE/taskmaster:$CI_COMMIT_REF_SLUG" .
    - docker push "$CI_REGISTRY_IMAGE/taskmaster:$CI_COMMIT_REF_SLUG"
  except:
    - develop-pmnet

build-master-filer:
  stage: build
  script:
    - setup_docker
    - registry_login
    - docker build --pull -f containers/filer.Dockerfile -t "$CI_REGISTRY_IMAGE/filer" .
    - docker push "$CI_REGISTRY_IMAGE/filer"
  only:
    - develop-pmnet

build-filer:
  stage: build
  script:
    - setup_docker
    - registry_login
    - docker build --pull -f containers/filer.Dockerfile -t "$CI_REGISTRY_IMAGE/filer:$CI_COMMIT_REF_SLUG" .
    - docker push "$CI_REGISTRY_IMAGE/filer:$CI_COMMIT_REF_SLUG"
  except:
    - develop-pmnet


.auto_devops: &auto_devops |

  function registry_login() {
    if [[ -n "$CI_REGISTRY_USER" ]]; then
      echo "Logging to GitLab Container Registry with CI credentials..."
      docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"
      echo ""
    fi
  }

  function setup_docker() {
    if ! docker info &>/dev/null; then
      if [ -z "$DOCKER_HOST" -a "$KUBERNETES_PORT" ]; then
        export DOCKER_HOST='tcp://localhost:2375'
      fi
    fi
  }

before_script:
  - *auto_devops
